#+TITLE: Meta-Barcoding Dual-Indexing
#+AUTHOR: Markus Ankenbrand

* About
This is a collection of the computational methods used for the publication <Link will be included when available>.
Here we provide all custom scripts and commands to replicate our results.
Furthermore you can download the pre-computed training sets for the RDPclassifier <Link> and UTAX <Link>.
If you find this information useful please consider citing our article <Link>.

* Data
If you are just interested in the pre-computed training sets go to releases and download the tar-ball.
There you can find the training sets in the subfolder training.

* Dependencies
This is a list of software tools and versions used in the original analysis.
We provide precomputed results for most steps so don't worry if you can't get a certain tool in a certain version.
If you get substantially different results (e.g. using other versions/tools) feel free to contact me.
You can also do so by opening an Issue here on GitHub.
** Hardware
Most of the analyses were performed on a Laptop with
 - Intel(R) Core(TM) i7-4800MQ CPU @ 2.70GHz Processor
 - 16GB RAM
 - Ubuntu 14.04 operating system
Only the RDP training was performed on a machine with more RAM available.
** Third party tools
 - [[http://its2.bioapps.biozentrum.uni-wuerzburg.de/][ITS2 database]] (Version 4.0.0 and inofficial release (included))
 - [[http://www.drive5.com/usearch/download.html][UTAX]] (Version usearch v8.0.1477_i86linux32)
 - [[https://github.com/rdpstaff/classifier][RDPclassifier]] (Version master from GitHub ([[https://github.com/rdpstaff/classifier/tree/63c637b2c8b3b941cf021d1e549caec0041b4c3c][63c637b2c8b3b941cf021d1e549caec0041b4c3c]], 2015-02-20))
 - [[https://github.com/greatfireball/NCBI-Taxonomy/tree/v0.70.5][NCBI::Taxonomy]] - perl module (Version v0.70.5, [[http://dx.doi.org/10.5281/zenodo.17375][doi:10.5281/zenodo.17375]])
 - [[http://www.r-project.org/][R]] (Version 3.1.2 (2014-10-31) -- "Pumpkin Helmet", Platform: x86_64-pc-linux-gnu (64-bit))
 - [[https://www.perl.org/][perl]] (Version v5.20.2 built for x86_64-linux-gnu-thread-multi)
 - [[http://qiime.org/][QIIME]] (Version 1.8.0+dfsg-4)

* Workflow
** Preparation of Reference Database
*** Data
The ITS2 sequences can be retrieved from the ITS2 database.
The previous reference db consisted of all "Direct folds & Homology modeled" sequences from "Viridiplantae" (db version v4.0.0, 2011).
This [[data/viridiplantae_folds_2011.fasta][file]] is included for comparison.
The new reference database consists of all sequences from "Viridiplantae" of an inofficial ITS2 database release (2014).
This [[data/viridiplantae_all_2014.fasta][file]] is also included in this repository.
*** Taxonomic assignment
Assign NCBI taxonomy on kingdom, phylum, class, order, family, genus and species level by mapping gi to taxid.

*ATTENTION:* Results of the taxonomic assignment may vary depending on the date of calculation as
NCBI Taxonoy is continuously revised. The viridiplantae_all_2014 dataset was processed on <2015-05-28 Do>
and the viridiplantae_folds_2011 dataset on <2015-06-29 Mo>.

Create an analysis folder and execute the following commands there (you need the NCBI::Taxonomy module for this):
#+BEGIN_SRC bash :dir analysis
grep "^>" ../data/viridiplantae_all_2014.fasta |
 perl -pe 's/^>(\d+).*/$1/' >viridiplantae_all_2014.gis
perl ../code/gi2taxonomy.pl\
 --gis viridiplantae_all_2014.gis\
 --out viridiplantae_all_2014.tax\
 --species viridiplantae_all_2014.species.taxids\
 --genus viridiplantae_all_2014.genus.taxids 

# This is only needed for comparison of the old reference db to the new one
grep "^>" ../data/viridiplantae_folds_2011.fasta |
 perl -pe 's/^>(\d+).*/$1/' >viridiplantae_folds_2011.gis
perl ../code/gi2taxonomy.pl\
 --gis viridiplantae_folds_2011.gis\
 --out viridiplantae_folds_2011.tax\
 --species viridiplantae_folds_2011.species.taxids\
 --genus viridiplantae_folds_2011.genus.taxids
#+END_SRC
This generates the following files:
 - viridiplantae_all_2014.gis
 - viridiplantae_all_2014.tax
 - viridiplantae_all_2014.species.taxids
 - viridiplantae_all_2014.genus.taxids
and
 - viridiplantae_folds_2011.gis
 - viridiplantae_folds_2011.tax
 - viridiplantae_folds_2011.species.taxids
 - viridiplantae_folds_2011.genus.taxids
All of those are also included in the precomputed folder.
*** UTAX and RDP training
The following commands executed in the analysis folder generate the required fasta and tax files for RDP and UTAX:
#+BEGIN_SRC bash :dir analysis
perl ../code/tax2rdp_utax.pl viridiplantae_all_2014.tax\
 ../data/viridiplantae_all_2014.fasta viridiplantae_all_2014
#+END_SRC
This generates the following files:
 - viridiplantae_all_2014.gi_tax.map
 - viridiplantae_all_2014.rdp.fa
 - viridiplantae_all_2014.rdp.tax
 - viridiplantae_all_2014.utax.fa
 - viridiplantae_all_2014.utax.tax
The first three are also included in the precomputed folder. And the last two are included in the training/utax folder.
The utax files are ready to be used for classification. 
However to speed up the initial step a udb file can be created as follows:
#+BEGIN_SRC bash :dir analysis
usearch8 -makeudb_usearch viridiplantae_all_2014.utax.fa\
 -output viridiplantae_all_2014.utax.udb
#+END_SRC
This creates the file viridiplantae_all_2014.utax.udb which is not included as it is not required and its size is 225MB.
To train the RDPclassifier execute the following commands 
(warning for the train command 16GB RAM did not suffice, but 32 did):
#+BEGIN_SRC bash :dir analysis
mkdir rdp_trained

java -jar classifier.jar rm-dupseq --infile viridiplantae_all_2014.rdp.fa\
 --outfile viridiplantae_all_2014.rdp.rm-dupseq.fa\
 --duplicates --min_seq_length 150

java -jar classifier.jar rm-partialseq viridiplantae_all_2014.rdp.fa\
 viridiplantae_all_2014.rdp.rm-dupseq.fa\
 viridiplantae_all_2014.rdp.rm-dupseq.rm-partialseq.fa\
 --alignment-mode overlap --min_gaps 50 --knn 20

java -Xmx32g -jar classifier.jar train --out_dir rdp_trained\
 --seq viridiplantae_all.rdp.rm-dupseq.rm-partialseq.fa\
 --tax_file viridiplantae_all.rdp.tax

cp data/its2.properties rdp_trained/its2.properties
#+END_SRC
This generates the following files:
 - viridiplantae_all_2014.rdp.rm-dupseq.fa
 - viridiplantae_all_2014.rdp.rm-dupseq.rm-partialseq.fa
All of those are also included in the precomputed folder.
And the folder rdp_trained including five files:
 - rdp_trained/bergeyTrainingTree.xml
 - rdp_trained/genus_wordConditionalProbList.txt
 - rdp_trained/its2.properties
 - rdp_trained/wordConditionalProbIndexArr.txt
 - rdp_trained/logWordPrior.txt
Those are the files required for RDP classification and are included as a tar.gz file in training/rdp

Now you have everything you need to classify sequences with either RDP classifier or UTAX.
*** Comparison of new database to old
**** Sequence increase
The number of sequences 2011 and 2014 can be calculated by using grep on header lines in the fasta files:
#+BEGIN_SRC sh
old=$(grep -c "^>" data/viridiplantae_folds_2011.fasta)
new=$(grep -c "^>" data/viridiplantae_all_2014.fasta)
increase=$(echo "100*$new/$old - 100" | bc -l)
echo "Sequences_2011: $old"
echo "Sequences_2014: $new"
echo "Increase: $increase%"
#+END_SRC

| Sequences_2011: |       73879 |
| Sequences_2014: |      182505 |
| Increase:       | 147.032309% |

*ATTENTION:* You may notice the discrepancy between 73,879 and the 73,853 reported in the publication.
The difference of 26 sequences is due to the fact that no taxonomy could be assigned to those 26 sequences 
at the time of training (of the first reference database). Those sequences have therefore been excluded.

Just to be sure:
#+BEGIN_SRC sh
echo "100*182505/73853 - 100" | bc -l
#+END_SRC

: 147.119277

**** Species increase
The number of species can be calculating by counting the lines in *.specis.taxids which is a uniq list.
#+BEGIN_SRC sh
old=$(cat precomputed/viridiplantae_folds_2011.species.taxids | wc -l)
new=$(cat precomputed/viridiplantae_all_2014.species.taxids | wc -l)
increase=$(echo "100*$new/$old - 100" | bc -l)
echo "Species_2011: $old"
echo "Species_2014: $new"
echo "Increase: $increase%"
#+END_SRC

| Species_2011: |      37396 |
| Species_2014: |      72325 |
| Increase:     | 93.403037% |

*** TODO BISON coverage
** Analysis of Pollen Samples
*** Data
Create a folder called raw and download data from [[http://www.ebi.ac.uk/][EBI]] SRA repository project accession number PRJEB8640.
Extract into separate .fastq files (two for each sample).
I assume your directory contains all the samples in the following form:
<SampleName>_S<SampleNr>_L001_R<1|2>_001.fastq e.g. PoJ1_S1_L001_R1_001.fastq
Where R1 is the file containing forward reads and R2 the file containing reverse reads for each sample.
*** Preprocessing
**** joining
In the raw folder create a subfolder joined and execute the following commands
#+BEGIN_SRC bash :dir raw/joined
qiime
for i in "../*_R1_001.fastq"
do
    BASE=$(basename $i _R1_001.fastq)
    join_paired_ends.py -f $i -r ../${BASE}_R2_001.fastq -o $BASE
done
#+END_SRC
This creates a folder for each sample in the form <SampleName>_S<SampleNr>_L001 containing three files:
 - fastqjoin.join.fastq
 - fastqjoin.un1.fastq
 - fastqjoin.un2.fastq
**** Q20 filtering
In the raw folder create a subfolder filtered and execute the following commands
#+BEGIN_SRC bash :dir raw/filtered
for i in ../joined/*
do
    BASE=$(basename $i)
    usearch8 -fastq_filter $i/fastqjoin.join.fastq\
     -fastq_truncqual 19 -fastq_minlen 150 -fastqout $BASE.q20.fq
done
#+END_SRC
Now you have one .fq file for each sample in the following form <SampleName>_S<SampleNr>_L001.q20.fq
with joined and quality filtered reads.
*** TODO Read counts
*** Classification
**** UTAX
In the raw folder create a subfolder utax and execute the following commands:
You can use viridiplantae_all_2014.utax.udb instead of viridiplantae_all_2014.utax.fa
if you generated the udb file in the previous steps.
#+BEGIN_SRC bash :dir raw/utax
for i in $(find ../filtered -name "*.fq")
do   
    BASE=$(basename $i .fq)
    usearch8 -utax $i -db ../../training/utax/viridiplantae_all_2014.utax.udb\
     -utax_rawscore -tt ../../training/utax/viridiplantae_all.utax.tax\
     -utaxout $BASE.utax
done 
#+END_SRC
This way you end up with a .utax file for each sample containing the utax classification.
Create a subfolder called counts and there execute this:
#+BEGIN_SRC bash :dir raw/utax/counts
for i in ../*.utax
do
    BASE=$(basename $i .utax)
    perl ../../../code/count_taxa_utax.pl --in $i --cutoff 20 >$BASE.count
done
#+END_SRC
Now you have a list of counts per taxon for each sample.
To aggregate the counts of all samples into a common matrix and to create files for phyloseq use the following commands:
#+BEGIN_SRC bash :dir raw/utax/counts
perl ../../../code/aggregate_counts.pl *.count >utax_aggregated_counts.tsv
perl -pe 's/^([^\t]+)_(\d+)\t/TID_$2\t/' utax_aggregated_counts.tsv >utax_otu_table
perl -ne 'if(/^([^\t]+)_(\d+)\t/){print "TID_$2\t"; $tax=$1; $tax=~s/_\d+,/\t/g; $tax=~s/__sub__/__/g; $tax=~s/__super__/__/g; print "$tax\n"; }' utax_aggregated_counts.tsv >utax_tax_table
#+END_SRC
The files
 - utax_aggregated_counts.tsv
 - utax_otu_table
 - utax_tax_table
are included in the precomputed folder
**** RDP classifier
In the raw folder create a subfolder rdp and execute the following commands:
#+BEGIN_SRC bash :dir raw/rdp
for i in $(find ../filtered -name "*.fq")
do
    BASE=$(basename i1 .fq)
    java -jar classifier.jar classify\
     --train_propfile ../../training/rdp/rdp_trained/its2.properties\
     --outputFile $BASE.rdp $i
done
#+END_SRC
This way you end up with a .rdp file for each sample containing the RDP classification.
Create a subfolder called counts and there execute this:
#+BEGIN_SRC bash :dir raw/rdp/counts
for i in ../*.rdp
do
    BASE=$(basename $i .rdp)
    perl ../../../code/count_taxa_rdp.pl --in $i --cutoff 0.85 >$BASE.count
done
#+END_SRC
Now you have a list of counts per taxon for each sample.
To aggregate the counts of all samples into a common matrix and to create files for phyloseq use the following commands:
#+BEGIN_SRC bash :dir raw/rdp/counts
perl ../../../code/aggregate_counts.pl *.count >rdp_aggregated_counts.tsv
perl -pe 's/^([^\t]+)_(\d+)\t/TID_$2\t/' rdp_aggregated_counts.tsv >rdp_otu_table
perl -ne 'if(/^([^\t]+)_(\d+)\t/){print "TID_$2\t"; $tax=$1; $tax=~s/_\d+,/\t/g; $tax=~s/__sub__/__/g; $tax=~s/__super__/__/g; print "$tax\n"; }' rdp_aggregated_counts.tsv >rdp_tax_table
#+END_SRC
The files
 - rdp_aggregated_counts.tsv
 - rdp_otu_table
 - rdp_tax_table
are included in the precomputed folder
*** TODO Species accumulation curves
*** TODO Comparison of utax and RDP
*** TODO Comparison to flowering data
